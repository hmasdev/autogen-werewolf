name: Automatically update README

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *"
  push:
    branches:
      - main

env:
  BRANCH_HEADER: "bot/update-readme-"

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -e .[dev]
      - name: Run script
        run: |
          python update_readme.py > README.md
      - name: Check if README.md has changed
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain README.md) ]]; then
            echo "README.md has changed."
            echo "changes_detected=true" >> "$GITHUB_ENV"
          else
            echo "README.md has not changed."
            echo "changes_detected=false" >> "$GITHUB_ENV"
          fi
      - name: Commit changes
        if: env.changes_detected == 'true'
        run: |
          git checkout -b ${BRANCH_HEADER}${GITHUB_RUN_ID}
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update README.md"
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
      - name: Push changes
        if: env.changes_detected == 'true'
        run: git push -u origin ${BRANCH_HEADER}${GITHUB_RUN_ID}
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
      - name: Create pull request
        if: env.changes_detected == 'true'
        run: |
          gh pr create \
            --title "Update README.md" \
            --body "This PR updates the README.md file." \
            --base main \
            --head ${BRANCH_HEADER}${GITHUB_RUN_ID} \
            --reviewer hmasdev \
            --assignee hmasdev \
            --label "bot"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
